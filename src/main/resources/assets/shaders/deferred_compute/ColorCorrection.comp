/*

Copyright (C) 2015-2020 Anarchy Engine Open Source Contributors (see CONTRIBUTORS.md)

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/.

 */

layout(local_size_x = 16, local_size_y = 16) in;
layout(rgba16f, binding = 0) restrict writeonly uniform image2D out_color;

uniform vec2 resolution;
uniform vec2 pixelOffset;

uniform sampler2D image;
uniform float exposure;
uniform float gamma;

#include function toneMap

void main() {
	ivec2 pixelcoords = ivec2(gl_GlobalInvocationID.xy);
	vec2 textureCoords = pixelcoords.xy / resolution + pixelOffset;

	vec3 color = texture(image, textureCoords).rgb;
	vec3 final = vec3(1.0) - exp(-color * exposure);

	// Apply tone-mapping
	final = toneMap(final);

	// Apply Gamma
	vec3 whiteScale = 1.0 / toneMap(vec3(W));
	final = pow(final * whiteScale, vec3(1.0 / gamma));

	// Write
	imageStore(out_color, pixelcoords, vec4(final, 0.0));
}